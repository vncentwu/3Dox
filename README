/*Name: Vincent Wu
  csid: vncentwu
  Slip days used: 3
 */

This program is a scene graph manager that manages a collection of varying 
nodes inside of a depth-first traversal tree. Each node has a differing function.
These nodes include:
    
    1. Object nodes: Represents coordinate space, dictating all lesser nodes.
    2. Geometry nodes: Contains and draws a 3D .obj model.
    3. Transformation nodes: Transforms all lesser nodes by scale, rotate, or rotation.
    4. Attribute nodes: Specifies render modes -- Points, wires, solid, shaded, face normals, and vertex normals.
    5. Light nodes: Represents a light source. 
    6. Camera nodes:  
    7. Motions: Allows an animation of lesser objects through rotation or translation

The GUI contains various panels to facilitate the tree graph.

    The 'create 'panel' allows for the user to add a node of specified type, either as
    a parent or as a child. 

    The 'current node' panel contains multiple sub-panels that allow for various
    modifications of the current node. Some of these panels are disabled, depending on the node type. 

        The 'model' sub-panel allows the user to specify a .obj model filename when editing a geometry node.

        The 'transformation'/'coordinate space'/'projection (square)'/'motion parameters' is a multi-purpose panel used to modify the arguments of
        the transformation, object, camera, or motion nodes. The name of the 
        panel changes according to the node type. 

            The camera will assume default projection matrix values until otherwise specified in the camera parameters. The x y z parameters represents
            the bottom left corner closest to the user as the provided parameters, creating a square.

            Transformation rotation is done with the x and y values, with x being left to right, and y being up and down. 

        The 'attributes' panel allows the user to specify an attribute type when in attribute mode.

        The 'node' panel shows details about the node, but are uneditable at this time.

        The 'motion' panel allows the user to specify an animation type while in motion mode.

        The tree management panel allows a user to hide a node, delete a node, or reset the entire tree.

    Lastly, the node selection panel is a selectable representation of the current graph. This is where the user selects what node that they would like to edit.

    Additionally, for ease of access, the graph comes preloaded with a camera, light, object, object transformation, and geometry node.



'Greater' nodes are descendant (eg. a parent will be greater than its child). 'Lesser' nodes are the opposite. 

The implementation of nodes with 'greater' and 'lesser' nodes allows for unique operations. Object coordinate spaces, transformations, animations, attributes, and lights are visible or applied only to its descendants. This flexibly allows for any node to affect a spectrum of nodes, from local to global. I believe that this is how it is intended in the project description, but I wanted to describe my implementation just in case.


Possible extra credit:

-Selectable graphic representation of tree.
-Node naming
-Hide node
-First person camera traversal is possible through one translate and one rotation node.
